//! SeaORM Entity. Generated by sea-orm-codegen 0.10.0

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Serialize, Deserialize, Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "case_support_form_factor")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub case_item_id: String,
    #[sea_orm(primary_key, auto_increment = false)]
    pub form_factor: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::case::Entity",
        from = "Column::CaseItemId",
        to = "super::case::Column::ItemId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Case,
}

impl Related<super::case::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Case.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
