//! SeaORM Entity. Generated by sea-orm-codegen 0.10.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "cpu_cooler")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub item_id: String,
    pub name: String,
    pub price: i32,
    pub popular_rank: Option<i32>,
    pub maker_name: String,
    pub product_name: String,
    pub air_flow_type: String,
    pub noise_level: String,
    pub max_tdp: Option<i32>,
    pub width: Option<f64>,
    pub height: Option<f64>,
    pub depth: Option<f64>,
    pub release_date: Option<Date>,
    //#[sea_orm(column_type = "Custom(\"BIT(1)\".to_owned())")]
    pub is_exist: bool,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::cpu_cooler_socket::Entity")]
    CpuCoolerSocket,
}

impl Related<super::cpu_cooler_socket::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CpuCoolerSocket.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
